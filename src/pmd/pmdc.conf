# UI
gl = true;
ui = true;
offline = true;
#offline = false;

# PMD Settings
ip = "192.168.0.69";
plugin = "../o3d.L32.pcp";
intrinsicPMD = "../intrinsic-pmd-6x4.xml";
distortionPMD = "../distortion-pmd-6x4.xml";
pmdSize: {
    width = 64;
    height = 50;
};

# Camera settings
cameraID = 1;
tracking: {
    max = 100;
    min = 50;
    quality = 0.9;
    minDist = 20;
    winSize = 20;
};
intrinsicCam = "../intrinsic-cam-6x4.xml";
distortionCam = "../distortion-cam-6x4.xml";

essentialMatrix: {
    rotation = "../essential-rot.xml";
    translation = "../essential-trn.xml";
};


# Outliers detection
# based on Huhle, B., Jenke, P. and Straßer, W. (2007) 
# ‘On-the-Fly Scene Acquisition with a Handy Multisensor-System’, 
# Int. J. of Intelligent Systems Technologies and Ap-plications, Vol. x, No. x, pp.xxx–xxx.
# see section 2.2, page 4
# use negative threshold to disable
outliersRemoval: {
    sigmaDepth = 17.0;
    threshold = -0.1;
    sigmaColor = 42.0;
};



# Pose Estimation
# When error is more then max it's consideret that pose is not estimated
maxError= 0.3;
# Error is in METERS
minPts = 3;
icp: {
    verbose = false;
    method = "helix"; 
# metod can be one of {apx, helix, svd, ortho, quat}
};


synchronous = false;
hybrid = true;
savePoses = false;

ransac: {
    min = 30;
# minimum percents (!) of inlier points
    maxIter = 10000;
    errorThresh = 0.005; 
};


# Point cloud and images history size, set 0 to make infinite
historyLen = 1; 


# Offline setts
camVideoFile = "../datasets/calib.avi";
pmdIFile = "../datasets/calib.irv";
pmdAFile = "../datasets/calib.arv";
pmd3DFile = "../datasets/calib.3dp";
headersFile = "../datasets/calib.head";

